{"ast":null,"code":"import _classCallCheck from\"C:/Users/moaid/Desktop/chat-app-master/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/moaid/Desktop/chat-app-master/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/moaid/Desktop/chat-app-master/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/moaid/Desktop/chat-app-master/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/moaid/Desktop/chat-app-master/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import Contact from\"./Contact\";import{Row,Input}from'reactstrap';/**\n * Contacts.\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Contacts=/*#__PURE__*/function(_React$Component){_inherits(Contacts,_React$Component);var _super=_createSuper(Contacts);function Contacts(){var _this;_classCallCheck(this,Contacts);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={search:''};_this.onSearch=function(e){return _this.setState({search:e.target.value});};_this.renderContact=function(contact,index){if(!contact.name.includes(_this.state.search))return;var messages=_this.props.messages.filter(function(e){return e.sender===contact.id||e.receiver===contact.id;});var lastMessage=messages[messages.length-1];var unseen=messages.filter(function(e){return!e.seen&&e.sender===contact.id;}).length;return/*#__PURE__*/_jsx(\"div\",{className:\"w-100\",onClick:_this.props.onChatNavigate.bind(_assertThisInitialized(_this),contact),children:/*#__PURE__*/_jsx(Contact,{contact:contact,message:lastMessage,unseen:unseen})},index);};return _this;}_createClass(Contacts,[{key:\"render\",value:/**\n     * Render component.\n     */function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"list\",children:[/*#__PURE__*/_jsx(Row,{className:\"search\",children:/*#__PURE__*/_jsx(Input,{onChange:this.onSearch,placeholder:\"Search\"})}),/*#__PURE__*/_jsx(Row,{id:\"contacts\",children:this.props.contacts.map(function(contact,index){return _this2.renderContact(contact,index);})})]});}/**\n     * Render single contact.\n     * @param contact\n     * @param index\n     */}]);return Contacts;}(React.Component);export default Contacts;","map":{"version":3,"sources":["C:/Users/moaid/Desktop/chat-app-master/web/src/components/chat/Contacts.js"],"names":["React","Contact","Row","Input","Contacts","state","search","onSearch","e","setState","target","value","renderContact","contact","index","name","includes","messages","props","filter","sender","id","receiver","lastMessage","length","unseen","seen","onChatNavigate","bind","contacts","map","Component"],"mappings":"qyBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,GAAT,CAAcC,KAAd,KAA2B,YAA3B,CAEA;AACA;AACA,G,2FACMC,CAAAA,Q,+UAEFC,K,CAAQ,CAAEC,MAAM,CAAE,EAAV,C,OAKRC,Q,CAAW,SAAAC,CAAC,QAAI,OAAKC,QAAL,CAAc,CAACH,MAAM,CAAEE,CAAC,CAACE,MAAF,CAASC,KAAlB,CAAd,CAAJ,E,OAuBZC,a,CAAgB,SAACC,OAAD,CAAUC,KAAV,CAAoB,CACjC,GAAG,CAACD,OAAO,CAACE,IAAR,CAAaC,QAAb,CAAsB,MAAKX,KAAL,CAAWC,MAAjC,CAAJ,CAA8C,OAC9C,GAAIW,CAAAA,QAAQ,CAAG,MAAKC,KAAL,CAAWD,QAAX,CAAoBE,MAApB,CAA2B,SAAAX,CAAC,QAAIA,CAAAA,CAAC,CAACY,MAAF,GAAaP,OAAO,CAACQ,EAArB,EAA2Bb,CAAC,CAACc,QAAF,GAAeT,OAAO,CAACQ,EAAtD,EAA5B,CAAf,CACA,GAAIE,CAAAA,WAAW,CAAGN,QAAQ,CAACA,QAAQ,CAACO,MAAT,CAAkB,CAAnB,CAA1B,CACA,GAAIC,CAAAA,MAAM,CAAGR,QAAQ,CAACE,MAAT,CAAgB,SAAAX,CAAC,QAAI,CAACA,CAAC,CAACkB,IAAH,EAAWlB,CAAC,CAACY,MAAF,GAAaP,OAAO,CAACQ,EAApC,EAAjB,EAAyDG,MAAtE,CACA,mBACI,YAAK,SAAS,CAAC,OAAf,CAAmC,OAAO,CAAE,MAAKN,KAAL,CAAWS,cAAX,CAA0BC,IAA1B,+BAAqCf,OAArC,CAA5C,uBACI,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,CAA2B,OAAO,CAAEU,WAApC,CAAiD,MAAM,CAAEE,MAAzD,EADJ,EAA4BX,KAA5B,CADJ,CAKH,C,0DA/BA;AACJ;AACA,OACI,iBAAQ,iBACL,mBACI,aAAK,SAAS,CAAC,MAAf,wBACK,KAAC,GAAD,EAAK,SAAS,CAAC,QAAf,uBACI,KAAC,KAAD,EAAO,QAAQ,CAAE,KAAKP,QAAtB,CAAgC,WAAW,CAAC,QAA5C,EADJ,EADL,cAII,KAAC,GAAD,EAAK,EAAE,CAAC,UAAR,UACM,KAAKW,KAAL,CAAWW,QAAX,CAAoBC,GAApB,CAAwB,SAACjB,OAAD,CAAUC,KAAV,QAAoB,CAAA,MAAI,CAACF,aAAL,CAAmBC,OAAnB,CAA4BC,KAA5B,CAApB,EAAxB,CADN,EAJJ,GADJ,CAUH,CAEA;AACJ;AACA;AACA;AACA,O,sBA7BuBd,KAAK,CAAC+B,S,EA0C7B,cAAe3B,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport Contact from \"./Contact\";\nimport { Row, Input } from 'reactstrap';\n\n/**\n * Contacts.\n */\nclass Contacts extends React.Component {\n\n    state = { search: ''};\n\n    /**\n     * Handle search event.\n     */\n    onSearch = e => this.setState({search: e.target.value});\n\n    /**\n     * Render component.\n     */\n    render(){\n       return (\n           <div className=\"list\">\n                <Row className=\"search\">\n                    <Input onChange={this.onSearch} placeholder=\"Search\" />\n                </Row>\n               <Row id=\"contacts\">\n                    {this.props.contacts.map((contact, index) => this.renderContact(contact, index) )}\n               </Row>\n           </div>\n       );\n   }\n\n    /**\n     * Render single contact.\n     * @param contact\n     * @param index\n     */\n    renderContact = (contact, index) => {\n       if(!contact.name.includes(this.state.search)) return;\n       let messages = this.props.messages.filter(e => e.sender === contact.id || e.receiver === contact.id);\n       let lastMessage = messages[messages.length - 1];\n       let unseen = messages.filter(e => !e.seen && e.sender === contact.id).length;\n       return(\n           <div className=\"w-100\" key={index} onClick={this.props.onChatNavigate.bind(this, contact)}>\n               <Contact contact={contact} message={lastMessage} unseen={unseen}/>\n           </div>\n       );\n   }\n}\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}