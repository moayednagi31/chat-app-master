{"ast":null,"code":"import axios from 'axios';\nvar Auth = {\n  /**\r\n   * Initialize axios headers.\r\n   */\n  init: function init() {\n    var user = JSON.parse(localStorage.getItem('user'));\n    axios.defaults.headers.common['Authorization'] = user !== null ? user.token : '';\n  },\n\n  /**\r\n   * Store user data after login.\r\n   * @param user\r\n   */\n  login: function login(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n    axios.defaults.headers.common['Authorization'] = user.token;\n  },\n\n  /**\r\n   * Delete user data.\r\n   */\n  logout: function logout() {\n    delete axios.defaults.headers.common['Authorization'];\n    localStorage.removeItem('user');\n  },\n\n  /**\r\n   * Is user authenticated.\r\n   * @returns {boolean}\r\n   */\n  auth: function auth() {\n    return localStorage.getItem('user') !== null;\n  },\n\n  /**\r\n   * Is guest.\r\n   * @returns {boolean}\r\n   */\n  guest: function guest() {\n    return localStorage.getItem('user') === null;\n  },\n\n  /**\r\n   * Get user token.\r\n   * @returns {string}\r\n   */\n  getToken: function getToken() {\n    var user = JSON.parse(localStorage.getItem('user'));\n    return user !== null ? user.token : '';\n  },\n\n  /**\r\n   * Set user\r\n   * @param newProfile\r\n   */\n  setUser: function setUser(newProfile) {\n    var user = JSON.parse(localStorage.getItem('user'));\n    newProfile.token = user.token;\n    localStorage.setItem('user', JSON.stringify(newProfile));\n  }\n};\nexport default Auth;","map":{"version":3,"sources":["C:/Users/moaid/Desktop/chat-app-master/web/src/Auth.js"],"names":["axios","Auth","init","user","JSON","parse","localStorage","getItem","defaults","headers","common","token","login","setItem","stringify","logout","removeItem","auth","guest","getToken","setUser","newProfile"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,IAAI,GAAG;AAET;AACJ;AACA;AACIC,EAAAA,IAAI,EAAE,gBAAM;AACR,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAP,IAAAA,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDP,IAAI,KAAK,IAAT,GAAgBA,IAAI,CAACQ,KAArB,GAA6B,EAA9E;AACH,GARQ;;AAUT;AACJ;AACA;AACA;AACIC,EAAAA,KAAK,EAAE,eAAAT,IAAI,EAAI;AACXG,IAAAA,YAAY,CAACO,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACU,SAAL,CAAeX,IAAf,CAA7B;AACAH,IAAAA,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDP,IAAI,CAACQ,KAAtD;AACH,GAjBQ;;AAmBT;AACJ;AACA;AACII,EAAAA,MAAM,EAAE,kBAAM;AACV,WAAOf,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAJ,IAAAA,YAAY,CAACU,UAAb,CAAwB,MAAxB;AACH,GAzBQ;;AA2BT;AACJ;AACA;AACA;AACIC,EAAAA,IAAI,EAAE;AAAA,WAAMX,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAvC;AAAA,GA/BG;;AAiCT;AACJ;AACA;AACA;AACIW,EAAAA,KAAK,EAAE;AAAA,WAAMZ,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAvC;AAAA,GArCE;;AAuCT;AACJ;AACA;AACA;AACIY,EAAAA,QAAQ,EAAE,oBAAM;AACZ,QAAIhB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,WAAOJ,IAAI,KAAK,IAAT,GAAgBA,IAAI,CAACQ,KAArB,GAA6B,EAApC;AACH,GA9CQ;;AAgDT;AACJ;AACA;AACA;AACIS,EAAAA,OAAO,EAAE,iBAACC,UAAD,EAAgB;AACrB,QAAIlB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAc,IAAAA,UAAU,CAACV,KAAX,GAAmBR,IAAI,CAACQ,KAAxB;AACAL,IAAAA,YAAY,CAACO,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACU,SAAL,CAAeO,UAAf,CAA7B;AACH;AAxDQ,CAAb;AA4DA,eAAepB,IAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst Auth = {\r\n\r\n    /**\r\n     * Initialize axios headers.\r\n     */\r\n    init: () => {\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        axios.defaults.headers.common['Authorization'] = user !== null ? user.token : '';\r\n    },\r\n\r\n    /**\r\n     * Store user data after login.\r\n     * @param user\r\n     */\r\n    login: user => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        axios.defaults.headers.common['Authorization'] = user.token;\r\n    },\r\n\r\n    /**\r\n     * Delete user data.\r\n     */\r\n    logout: () => {\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        localStorage.removeItem('user');\r\n    },\r\n\r\n    /**\r\n     * Is user authenticated.\r\n     * @returns {boolean}\r\n     */\r\n    auth: () => localStorage.getItem('user') !== null,\r\n\r\n    /**\r\n     * Is guest.\r\n     * @returns {boolean}\r\n     */\r\n    guest: () => localStorage.getItem('user') === null,\r\n\r\n    /**\r\n     * Get user token.\r\n     * @returns {string}\r\n     */\r\n    getToken: () => {\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        return user !== null ? user.token : '';\r\n    },\r\n\r\n    /**\r\n     * Set user\r\n     * @param newProfile\r\n     */\r\n    setUser: (newProfile) => {\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        newProfile.token = user.token;\r\n        localStorage.setItem('user', JSON.stringify(newProfile));\r\n    },\r\n\r\n};\r\n\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}